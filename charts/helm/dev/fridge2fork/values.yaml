# Main Application Configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""
  automount: true

# Backend Service Configuration
server:
  enabled: true
  replicaCount: 1

  image:
    repository: ggorockee/fridge2fork-dev-server
    tag: sha-8b2c9d4b
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
    portName: "django"

  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

  serviceAccount:
    create: true
    annotations: {}
    name: ""
    automount: true

  configMap:
    enabled: true
    config:
      MAIN_PORT: "8000"
      LOG_LEVEL: "INFO"
      DEBUG_MODE: "false"
      PYTHONPATH: "/app"
      PYTHONUNBUFFERED: "1"
      APP_NAME: "fridge2fork"
      APP_VERSION: "1.0.0"
      APP_ENV: "development"
      ALLOWED_HOSTS: "localhost,127.0.0.1,api-dev.woohalabs.com,api.woohalabs.com,*.woohalabs.com"

  secret:
    enabled: true
    secretName: "fridge2fork-db-credentials"

  podSecurityContext:
    fsGroup: 2000

  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000

  podAnnotations: {}
  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  healthCheck:
    enabled: false
    livenessProbe:
      httpGet:
        path: /fridge2fork/v1/system/health
        port: http
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 6
    readinessProbe:
      httpGet:
        path: /fridge2fork/v1/system/health
        port: http
      initialDelaySeconds: 30
      periodSeconds: 5
      timeoutSeconds: 5
      failureThreshold: 6

  # Init container for Django migrations
  initContainer:
    enabled: true
    name: migrate
    command: ["/bin/bash", "-c"]
    args:
    - |
      set -e
      echo "ðŸ”§ Running database migrations..."
      cd /app/app
      /root/.local/bin/uv run python manage.py makemigrations --noinput || true
      /root/.local/bin/uv run python manage.py migrate --noinput
      echo "âœ… Migrations completed successfully"
    env:
    - name: PATH
      value: "/root/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    - name: ENVIRONMENT
      value: "development"
    - name: RUN_MIGRATIONS
      value: "true"
    - name: AUTO_MIGRATE
      value: "false"
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"

# Database Configuration
database:
  enabled: true
  global:
    security:
      allowInsecureImages: true
    postgresql:
      auth:
        username: fridge2fork
        database: fridge2fork
        existingSecret: fridge2fork-db-credentials

  image:
    registry: docker.io
    repository: bitnamilegacy/postgresql
    tag: 17.5.0-debian-12-r12

  volumePermissions:
    image:
      registry: docker.io
      repository: bitnamilegacy/os-shell
      tag: 12-debian-12-r46

  metrics:
    image:
      registry: docker.io
      repository: bitnamilegacy/postgres-exporter
      tag: 0.17.1-debian-12-r11

  primary:
    persistence:
      size: 20Gi
      volumeName: "data"
