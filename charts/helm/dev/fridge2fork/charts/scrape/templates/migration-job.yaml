{{- if .Values.migration.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "scrape.fullname" . }}-migration
  labels:
    {{- include "scrape.labels" . | nindent 4 }}
    app.kubernetes.io/component: migration
  {{- if .Values.jobRecreate.enabled }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "{{ .Values.jobRecreate.hookWeight | default "-10" }}"
    "helm.sh/hook-delete-policy": {{ .Values.jobRecreate.deletePolicy | default "before-hook-creation" }}
  {{- end }}
spec:
  {{- if .Values.migration.activeDeadlineSeconds }}
  activeDeadlineSeconds: {{ .Values.migration.activeDeadlineSeconds }}
  {{- end }}
  {{- if .Values.migration.backoffLimit }}
  backoffLimit: {{ .Values.migration.backoffLimit }}
  {{- end }}
  {{- if .Values.migration.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ .Values.migration.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "scrape.serviceAccountName" . }}
      restartPolicy: {{ .Values.migration.restartPolicy | default "OnFailure" }}
      
      # Init Container - DB 스키마 마이그레이션
      initContainers:
      - name: db-migration
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/app/entrypoint.sh", "alembic"]
        envFrom:
        - secretRef:
            name: {{ (index .Values.envFrom 0).secretRef.name }}
        env:
        - name: PYTHONPATH
          value: /app
        resources:
          {{- toYaml .Values.migration.alembic.resources | nindent 10 }}

      # 완료 컨테이너 (Kubernetes Job에서 containers 필수)
      containers:
      - name: migration-complete
        image: busybox:1.35
        command: ["sh", "-c"]
        args: ["echo 'Alembic migration completed successfully'; sleep 5"]
        resources:
          requests:
            cpu: "10m"
            memory: "16Mi"
          limits:
            cpu: "50m"
            memory: "32Mi"

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}