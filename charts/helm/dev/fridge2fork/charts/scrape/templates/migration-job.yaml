{{- if .Values.migration.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "scrape.fullname" . }}-migration-{{ .Values.migration.jobSuffix | default (now | date "20060102-150405") }}
  labels:
    {{- include "scrape.labels" . | nindent 4 }}
    app.kubernetes.io/component: migration
  {{- if .Values.migration.helm.hook.enabled }}
  annotations:
    "helm.sh/hook": {{ .Values.migration.helm.hook.type | default "pre-install,pre-upgrade" }}
    "helm.sh/hook-weight": "{{ .Values.migration.helm.hook.weight | default "-10" }}"
    "helm.sh/hook-delete-policy": {{ .Values.migration.helm.hook.deletePolicy | default "before-hook-creation,hook-succeeded" }}
  {{- end }}
spec:
  {{- if .Values.migration.activeDeadlineSeconds }}
  activeDeadlineSeconds: {{ .Values.migration.activeDeadlineSeconds }}
  {{- end }}
  {{- if .Values.migration.backoffLimit }}
  backoffLimit: {{ .Values.migration.backoffLimit }}
  {{- end }}
  {{- if .Values.migration.ttlSecondsAfterFinished }}
  ttlSecondsAfterFinished: {{ .Values.migration.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "scrape.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: migration
        migration-job: {{ .Values.migration.jobSuffix | default (now | date "20060102-150405") }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "scrape.serviceAccountName" . }}
      restartPolicy: {{ .Values.migration.restartPolicy | default "OnFailure" }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      initContainers:
        # Alembic 데이터베이스 스키마 마이그레이션
        - name: alembic-migration
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "========================================"
              echo "🔄 Alembic 데이터베이스 마이그레이션 시작"
              echo "========================================"

              # 데이터베이스 연결 대기
              echo "🔄 데이터베이스 연결 대기 중..."
              timeout=60
              until pg_isready -h $POSTGRES_SERVER -p $POSTGRES_PORT -U $POSTGRES_USER; do
                echo "⏳ Waiting for database ($POSTGRES_SERVER:$POSTGRES_PORT)..."
                sleep 2
                timeout=$((timeout - 2))
                if [ $timeout -le 0 ]; then
                  echo "❌ 데이터베이스 연결 타임아웃"
                  exit 1
                fi
              done
              echo "✅ 데이터베이스 연결 성공"

              # Alembic 마이그레이션 실행
              echo "🔄 Alembic 마이그레이션 실행 중..."
              cd /app
              alembic upgrade head
              echo "✅ Alembic 마이그레이션 완료"

              # 기본 데이터 삽입 (스크립트가 있을 경우)
              if [ -f "/app/scripts/insert_basic_data.py" ]; then
                echo "🔄 기본 데이터 삽입 중..."
                python scripts/insert_basic_data.py
                echo "✅ 기본 데이터 삽입 완료"
              else
                echo "ℹ️ 기본 데이터 삽입 스크립트가 없습니다. 건너뜀."
              fi

              echo "✅ 데이터베이스 초기화 완료"
          env:
            - name: MODE
              value: "migration"
            - name: PYTHONPATH
              value: "/app"
            - name: PYTHONUNBUFFERED
              value: "1"
            {{- if .Values.migration.alembic.config }}
            {{- range $key, $value := .Values.migration.alembic.config }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
          resources:
            {{- toYaml .Values.migration.alembic.resources | nindent 12 }}
          {{- if .Values.migration.volumeMounts }}
          volumeMounts:
            {{- toYaml .Values.migration.volumeMounts | nindent 12 }}
          {{- end }}

      containers:
        # CSV 데이터 마이그레이션
        - name: csv-migration
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "========================================"
              echo "📚 CSV 데이터 마이그레이션 시작"
              echo "========================================"

              # CSV 파일 확인
              echo "🔍 CSV 파일 확인 중..."
              if ls /app/datas/*.csv 1> /dev/null 2>&1; then
                for file in /app/datas/*.csv; do
                  echo "📄 발견된 CSV 파일: $(basename "$file") ($(du -h "$file" | cut -f1))"
                done
              else
                echo "⚠️ CSV 파일이 없습니다. 볼륨이 마운트되었는지 확인하세요."
                echo "📁 /app/datas 디렉토리 내용:"
                ls -la /app/datas/ || echo "디렉토리가 존재하지 않습니다."
              fi

              # 환경변수 확인
              echo "🔧 환경변수 확인:"
              echo "   - MODE: $MODE"
              echo "   - CHUNK_SIZE: ${CHUNK_SIZE:-기본값}"
              echo "   - MAX_RECORDS: ${MAX_RECORDS:-전체}"

              # CSV 마이그레이션 실행
              echo "🔄 CSV 마이그레이션 실행 중..."

              {{- if .Values.migration.useMainScript }}
              # main.py 사용
              python main.py migrate \
                {{- if .Values.migration.chunkSize }}
                --chunk-size {{ .Values.migration.chunkSize }} \
                {{- end }}
                {{- if .Values.migration.maxRecords }}
                --max-records {{ .Values.migration.maxRecords }}
                {{- end }}
              {{- else }}
              # 직접 스크립트 실행
              python scripts/migrate_csv_data.py \
                {{- if .Values.migration.chunkSize }}
                --chunk-size {{ .Values.migration.chunkSize }} \
                {{- end }}
                {{- if .Values.migration.maxRecords }}
                --max-records {{ .Values.migration.maxRecords }}
                {{- end }}
              {{- end }}

              echo "✅ CSV 마이그레이션 완료"

              # 마이그레이션 검증 (스크립트가 있을 경우)
              if [ -f "/app/scripts/verify_migration.py" ]; then
                echo "🔍 마이그레이션 검증 중..."
                python scripts/verify_migration.py
                echo "✅ 검증 완료"
              else
                echo "ℹ️ 검증 스크립트가 없습니다. 건너뜀."
              fi

              # 마이그레이션 통계 출력
              {{- if .Values.migration.showStats }}
              if [ -f "/app/main.py" ]; then
                echo "📊 마이그레이션 통계:"
                python main.py stats || echo "통계 조회 실패"
              fi
              {{- end }}

              echo "🎉 모든 마이그레이션 작업 완료!"
          env:
            - name: MODE
              value: "migration"
            - name: PYTHONPATH
              value: "/app"
            - name: PYTHONUNBUFFERED
              value: "1"
            {{- if .Values.migration.csv.config }}
            {{- range $key, $value := .Values.migration.csv.config }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
          resources:
            {{- toYaml .Values.migration.csv.resources | nindent 12 }}
          {{- if .Values.migration.volumeMounts }}
          volumeMounts:
            {{- toYaml .Values.migration.volumeMounts | nindent 12 }}
          {{- end }}

      {{- if .Values.migration.volumes }}
      volumes:
        {{- toYaml .Values.migration.volumes | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}