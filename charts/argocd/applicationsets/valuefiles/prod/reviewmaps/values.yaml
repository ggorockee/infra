#########################################################################

#########################################################################
scrape:
  enabled: true
  # Default values for backend.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: ggorockee/scrape-with-selenium
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "20250825-35cfd01"

  # This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []
  # This is to override the chart name.
  nameOverride: ""
  fullnameOverride: ""

  # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels:
    job: scrape
    service: scrape

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 8000
    portName: "fastapi"

  # This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe: {}
    # httpGet:
    #   path: /
    #   port: http

  readinessProbe: {}
    # httpGet:
    #   path: /
    #   port: http

  # This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

  configMap:
    enabled: true
    # name을 지정하지 않으면 차트 이름 기반으로 자동 생성됩니다.
    name: ""
    data:
      BASE_URL: "https://inflexer.net"
      HEADLESS: "true"
      # 배치 스케줄 동작 (코드의 Settings와 매핑)
      BATCH_MODE: "once"                    # once|daily|interval (runner.mode=once면 여기 값 무시해도 됨)
      BATCH_TIME: "01:00"                    # daily 모드일 때
      BATCH_INTERVAL_SECONDS: "300"          # interval 모드일 때
      TIMEZONE: "Asia/Seoul"
      RUN_AT_START: "false"                  # 시작 직후 1회 실행 여부
      TABLE_NAME: "campaign"

  secret:
    enabled: true
    # 클러스터에 미리 생성되어 있어야 하는 Secret 이름들의 목록
    names:
      - "reviewmaps-db-credentials"
      - "naver-api-creds"
    # - "savvyrev-prod-secret"

  runner:
    enabled: true
    mode: "daily"                             # once | daily | interval
    # CronJob로 돌릴 때
    cronjob:
      enabled: true                          # CronJob 사용할지
      schedule: "0 1 * * *"                  # 매일 01:00
      timeZone: "Asia/Seoul"                 # 클러스터가 지원하면 적용됨
      concurrencyPolicy: "Forbid"
      startingDeadlineSeconds: 900
      successfulJobsHistoryLimit: 2
      failedJobsHistoryLimit: 3
      backoffLimit: 2
      ttlSecondsAfterFinished: 3600
    # Deployment(내부 스케줄러)로 돌릴 때
    deployment:
      enabled: false                         # 내부 스케줄러(상주형) 사용할지
      replicas: 1





#########################################################################

#########################################################################

server:
  enabled: true
  # Default values for backend.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: ggorockee/reviewmaps-server
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "20250825-aaa1a5b"

  # This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []
  # This is to override the chart name.
  nameOverride: ""
  fullnameOverride: ""

  # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels:
    job: "reviewmaps-server"

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
  service:
    # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    type: ClusterIP
    # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
    port: 8000
    portName: "fastapi"

  # This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe: {}
    # httpGet:
    #   path: /
    #   port: http

  readinessProbe: {}
    # httpGet:
    #   path: /
    #   port: http

  # This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

  configMap:
    enabled: false
    # name을 지정하지 않으면 차트 이름 기반으로 자동 생성됩니다.
    name: ""
    data: {}
      # BASE_URL: "https://inflexer.net"
      # HEADLESS: "true"
      # # 배치 스케줄 동작 (코드의 Settings와 매핑)
      # BATCH_MODE: "daily"                    # once|daily|interval (runner.mode=once면 여기 값 무시해도 됨)
      # BATCH_TIME: "01:00"                    # daily 모드일 때
      # BATCH_INTERVAL_SECONDS: "300"          # interval 모드일 때
      # TIMEZONE: "Asia/Seoul"
      # RUN_AT_START: "false"                  # 시작 직후 1회 실행 여부
      # TABLE_CAMPAIGN: "campaign"
      # LOG_LEVEL: "info"
      # APP_ENV: "production"

  secret:
    enabled: true
    # 클러스터에 미리 생성되어 있어야 하는 Secret 이름들의 목록
    names:
      - reviewmaps-db-credentials
      - reviewmaps-api-credentials



#########################################################################

#########################################################################
web:
  enabled: false

#########################################################################

#########################################################################

database:
  enabled: true
  global:
    postgresql:
      auth:
        username: reviewmaps
        database: reviewmaps
        existingSecret: reviewmaps-db-credentials

  primary:
    persistence:
      size: 20Gi
      volumeName: "data"
