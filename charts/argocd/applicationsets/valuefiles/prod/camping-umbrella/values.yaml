backend:
  enabled: true
  image:
    repository: ggorockee/py-webapp-backend
    tag: "20250715-5490f11"
  extraLabels:
    # 여기에 원하는 추가 레이블을 '키: 값' 형태로 정의
    app: camping
    service: camping-be
    component: webapp
  annotations:
    reloader.stakater.com/auto: "true"
  livenessProbe:
    enabled: true
    path: /healthz/ready # 1번 단계에서 추가한 헬스 체크 경로
    initialDelaySeconds: 30 # 파드가 시작되고 30초 후부터 검사 시작
    periodSeconds: 15 # 15초마다 검사
    timeoutSeconds: 5 # 응답 대기 시간 5초
    failureThreshold: 3 # 3번 연속 실패하면 재시작
  readinessProbe:
    enabled: true
    path: /healthz/ready # livenessProbe와 동일한 경로 사용 가능
    initialDelaySeconds: 10 # liveness보다 먼저, 더 짧게 검사 시작
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 2 # 2번 연속 실패 시 트래픽 차단
  service:
    port: 8000
  ingress:
    enabled: true
    className: "istio"
    annotations: {}
    hosts:
      - camping-api.ggorockee.com
    gateway:
      name: "istio-system/ggorockee-com-gateway"
    httpRoutes:
      # 규칙 1: camping.ggorockee.com -> ggorockee.com 리다이렉션
      # - name: camping-redirect
      #   match:
      #     - authority:
      #         exact: camping.ggorockee.com
      #   redirect:
      #     authority: "ggorockee.com"
      #     redirectCode: 301
      - name: main-app-route
        match:
          - authority:
              exact: "camping-api.ggorockee.com"
            uri:
              prefix: /
        route:
          defaultRoute:
            weight: 100
          extraRoute: {}
          # - host: extraService.ns.svc.cluster.local
          #   port: 8080
          #   weight: 100
  extraConfig:
    - name: django-config
      data:
        DEBUG: "off"
        DJANGO_ALLOWED_HOSTS: ".ggorockee.com,camping-umbrella-backend.camping.svc.cluster.local"
        IN_DOCKER_BUILD: "off"
        ENABLE_ACCESS_LOG: "on"
  extraSecrets:
    - name: camping-umbrella-backend-secret
frontend:
  enabled: true
  image:
    repository: ggorockee/webapp-frontend-vue
    tag: "20250715-1deaa2a"
  extraLabels:
    app: camping
    service: camping-fe
    component: webapp
  annotations:
    reloader.stakater.com/auto: "true"
  livenessProbe:
    enabled: true
    path: /healthz/ready # 1번 단계에서 추가한 헬스 체크 경로
    initialDelaySeconds: 30 # 파드가 시작되고 30초 후부터 검사 시작
    periodSeconds: 15 # 15초마다 검사
    timeoutSeconds: 5 # 응답 대기 시간 5초
    failureThreshold: 3 # 3번 연속 실패하면 재시작
  readinessProbe:
    enabled: true
    path: /healthz/ready # livenessProbe와 동일한 경로 사용 가능
    initialDelaySeconds: 10 # liveness보다 먼저, 더 짧게 검사 시작
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 2 # 2번 연속 실패 시 트래픽 차단
  service:
    port: 80
  accesslog:
    enabled: true
  ingress:
    enabled: true
    className: "istio"
    annotations: {}
    hosts:
      - camping.ggorockee.com
      - ggorockee.com
    gateway:
      name: "istio-system/ggorockee-com-gateway"
    httpRoutes:
      # 규칙 1: camping.ggorockee.com -> ggorockee.com 리다이렉션
      - name: camping-redirect
        match:
          - authority:
              exact: camping.ggorockee.com
        redirect:
          authority: "ggorockee.com"
          redirectCode: 301
      - name: main-app-route
        match:
          - authority:
              exact: "ggorockee.com"
            uri:
              prefix: /
        route:
          defaultRoute:
            weight: 100
          extraRoute: {}
          # - host: extraService.ns.svc.cluster.local
          #   port: 8080
          #   weight: 100
  extraConfig: []
  # - name: nginx-access-logging
  #   data:
  #     access.conf: |

  extraSecrets:
    - name: camping-umbrella-front-cloudflare
      # - name:
      #   data: {}
postgresql:
  enabled: true
  global:
    postgresql:
      auth:
        username: ggorockee
        database: camping
        existingSecret: camping-db-credentials
  primary:
    annoations:
      reloader.stakater.com/auto: "true"
