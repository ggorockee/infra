protocol: http

networkPolicy:
  http:
    enabled: true

networkPolicy:
  transport:
    enabled: true

clusterName: "elasticsearch"
nodeGroup: "master"

replicas: 2
minimumMasterNodes: 1

roles:
  - master
  - ingest
  - data
  - remote_cluster_client

discoverySeedHosts: []               # 더 이상 다른 노드를 찾지 않도록 빈 배열
clusterInitialMasterNodes:
  - elasticsearch-master-0

esConfig:
  elasticsearch.yml: |
    network.host: 0.0.0.0
    indices.memory.index_buffer_size: 10%
    indices.fielddata.cache.size: 5%
    xpack.security.enabled: false
    xpack.security.http.ssl.enabled: false
    xpack.security.transport.ssl.enabled: false

# ─────────── 스토리지 (단일 노드라도 persistence ON) ───────────
volumeClaimTemplate:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 30Gi

# extraInitContainers:
#   - name: fix-permissions
#     image: busybox
#     command: ['sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/data']
#     volumeMounts:
#       - name: elasticsearch-master
#         mountPath: /usr/share/elasticsearch/data
      

resources:
  requests:
    cpu: "500m"
    memory: "2Gi"
  limits:
    cpu: "1000m"
    memory: "2Gi"

esJavaOpts: "-Xms1g -Xmx1g"


readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 60  # 초기 로딩 여유를 더 줌
  periodSeconds: 10
  successThreshold: 3
  timeoutSeconds: 10

clusterHealthCheckParams: "wait_for_status=yellow&timeout=60s"
clusterInitialMasterNodes: []
